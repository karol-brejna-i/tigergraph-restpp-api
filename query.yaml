openapi: 3.0.0
info:
  title: TigerGraph REST++ API
  description: Title
  version: 1.0.0
  contact: {}
servers:
  - url: "http://192.168.0.105:9000"
tags:
  - name: done
    description: Specification tested
  - name: todo
    description: A draft version for the endpoint
  - name: inprogress
    description: Some work is needed

paths:
  /echo/{graph_name}:
    get:
      summary: TBD
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
    post:
      summary: TBD
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
    parameters:
      - name: graph_name
        in: path
        required: true
        schema:
          type: string
          example: my_graph
        description: The name of the graph (REQUIRED in case of multiple graph in the database).

  /query/{graph_name}/{query_name}:
    get:
      summary: Run an installed query
      description: |
        Each time a new TigerGraph query is installed, a dynamic endpoint is generated. 
        This new endpoint enables the user to run the new TigerGraph query through HTTP requests 
        and giving the parameters in URL or in a data payload. In the case of a GET request, 
        parameters should be passed in through the query string.
      operationId: runInstalledQueryGet
      parameters:
        - name: read_committed
          in: query
          description: |
            Boolean value that indicates whether to use read-committed isolation level for the query. 
            At the read committed level, it is guaranteed that any data read is committed at the moment it is read. 
            By default, it is off.
          required: false
          schema:
            type: boolean
        - in: query
          name: params
          description: |
            When using a GET request to run an installed query, the query parameters are passed in through the query string of the URL.
          schema:
            type: object
            additionalProperties:
              type: string
          style: form
          explode: true
      tags:
        - inprogress
      responses:
        '200':
          description: Query result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
    post:
      summary: Run an installed query
      description: |
        Each time a new TigerGraph query is installed, a dynamic endpoint is generated. 
        This new endpoint enables the user to run the new TigerGraph query through HTTP requests 
        and giving the parameters in URL or in a data payload. 
        
        Users can run queries through a POST request, which allows them to pass query parameters in JSON. 
        This is especially helpful when the query takes complex parameters.
      operationId: runInstalledQueryPost
      parameters:
        - name: read_committed
          in: query
          description: |
            Boolean value that indicates whether to use read-committed isolation level for the query. 
            At the read committed level, it is guaranteed that any data read is committed at the moment it is read. 
            By default, it is off.
          required: false
          schema:
            type: boolean
      requestBody:
        description: Optional description in *Markdown*
        required: false
        content:
          application/json:
            schema:
              type: object
      tags:
        - inprogress
      responses:
        '200':
          description: Query result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
    parameters:
      - name: graph_name
        in: path
        description: Graph name
        required: true
        schema:
          type: string
      - name: query_name
        in: path
        description: Query name
        required: true
        schema:
          type: string
      - in: header
        name: GSQL-REPLICA
        description: |
          f you have a TigerGraph HA cluster, you can specify a query to run on a particular replica 
          with the HTTP header GSQL-REPLICA. The value of the header needs to be an integer within 
          the range one to the replication factor of the cluster. If you supply a invalid value for the header, 
          the request will return an error.
        schema:
          type: number
        required: false
      - in: header
        name: GSQL-THREAD-LIMIT
        description: | 
          When running a query through RESTPP, you can specify a limit on the number of threads that the query is allowed to use on each node.
          The number of threads used by a query means the number of vCPUs used by the query. 
          By default, a query will use all threads that are available on a machine.
        schema:
          type: number
        required: false
      - in: header
        name: GSQL-TIMEOUT
        schema:
          type: number
        required: false
      - in: header
        name: RESPONSE-LIMIT
        schema:
          type: number
        required: false

components:
  schemas:
    HelloResponse:
      type: object
      properties:
        error:
          type: boolean
        message:
          type: string
    MessageResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    StatisticsResponse:
      type: object
      properties:
        GET /statistics/{graph_name}:
          type: object
          properties:
            CompletedRequests:
              type: number
            QPS:
              type: number
            TimeoutRequests:
              type: number
            AverageLatency:
              type: number
            MaxLatency:
              type: number
            MinLatency:
              type: number
            LatencyPercentile:
              type: array
              items:
                type: number
    QueryResponse:
      type: object
      properties:
        version:
          type: object
          properties:
            edition:
              type: string
            api:
              type: string
            schema:
              type: number
        error:
          type: boolean
        message:
          type: string
        results:
          type: array
          items:
            type: object
            properties: {}
